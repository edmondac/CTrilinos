/* src/CTrilinos_Config.h.in.  Generated from configure.ac by autoheader.  */

/* Define if want to build CTrilinos-examples */
#undef HAVE_CTRILINOS_EXAMPLES

/* Define if want to build CTrilinos-tests */
#undef HAVE_CTRILINOS_TESTS

/* Define if want to build examples */
#undef HAVE_EXAMPLES

/* Define if you want to build export makefiles. */
#undef HAVE_EXPORT_MAKEFILES

/* Define if you are using gnumake - this will shorten your link lines. */
#undef HAVE_GNUMAKE

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* define if we want to use MPI */
#undef HAVE_MPI

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define if want to build tests */
#undef HAVE_TESTS

/* Define if want to build teuchos-complex */
#undef HAVE_TEUCHOS_COMPLEX

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif
